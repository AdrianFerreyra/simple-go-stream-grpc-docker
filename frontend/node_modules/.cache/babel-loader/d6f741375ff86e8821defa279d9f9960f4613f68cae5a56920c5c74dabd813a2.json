{"ast":null,"code":"var _jsxFileName = \"/Users/luisadrianferreyra/Dev/laferreyra.github.io/projects/collaborative-document-system/frontend/src/components/StreamingComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { GrpcClient } from \"../services/grpcClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grpcClient = new GrpcClient(\"http://localhost:8080\");\nexport const StreamingComponent = ({\n  clientId\n}) => {\n  _s();\n  console.log(\"render comp\");\n  const [text, setText] = useState(\"start\");\n  const [stream, setStream] = useState < ClientReadableStream || null > null;\n  useEffect(() => {\n    const newStream = grpcClient.startStream(clientId, message => {\n      console.log(\"received comp\");\n      setText(message);\n    });\n    setStream(newStream);\n  }, [clientId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_s(StreamingComponent, \"aK/erNLUNlltMeA3XlCtXrLsbiI=\");\n_c = StreamingComponent;\nvar _c;\n$RefreshReg$(_c, \"StreamingComponent\");","map":{"version":3,"names":["useEffect","useState","GrpcClient","jsxDEV","_jsxDEV","grpcClient","StreamingComponent","clientId","_s","console","log","text","setText","stream","setStream","ClientReadableStream","newStream","startStream","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luisadrianferreyra/Dev/laferreyra.github.io/projects/collaborative-document-system/frontend/src/components/StreamingComponent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { GrpcClient } from \"../services/grpcClient\";\n\ninterface Props {\n  clientId: string;\n}\n\nconst grpcClient = new GrpcClient(\"http://localhost:8080\");\n\nexport const StreamingComponent = ({ clientId }: Props) => {\n  console.log(\"render comp\");\n  const [text, setText] = useState<string>(\"start\");\n  const [stream, setStream] =\n    useState < ClientReadableStream<UpdateResponse> || null > null;\n\n  useEffect(() => {\n    const newStream = grpcClient.startStream(clientId, (message: string) => {\n      console.log(\"received comp\");\n      setText(message);\n    });\n    setStream(newStream);\n  }, [clientId]);\n\n  return <div>{text}</div>;\n};\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMpD,MAAMC,UAAU,GAAG,IAAIH,UAAU,CAAC,uBAAuB,CAAC;AAE1D,OAAO,MAAMI,kBAAkB,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACzDC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAS,OAAO,CAAC;EACjD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GACvBb,QAAQ,GAAGc,oBAAoC,IAAI,IAAI,GAAG,IAAI;EAEhEf,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAGX,UAAU,CAACY,WAAW,CAACV,QAAQ,EAAGW,OAAe,IAAK;MACtET,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BE,OAAO,CAACM,OAAO,CAAC;IAClB,CAAC,CAAC;IACFJ,SAAS,CAACE,SAAS,CAAC;EACtB,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAAe,QAAA,EAAMR;EAAI;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC1B,CAAC;AAACf,EAAA,CAfWF,kBAAkB;AAAAkB,EAAA,GAAlBlB,kBAAkB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}